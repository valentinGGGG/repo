let ctx;
let canvas;
function setup() {
  canvas = createCanvas(288, 400);
  ctx = canvas.elt.getContext("2d");
}

function draw() {
  background(255);
  drawA(ctx);
}
// SVG CONVERSION CODE (ITS A LOT AND IT ENDS AT LINE 712 LMAO)
function drawA(ctx) {
  beginShape();
  vertex(0, 0);
  vertex(288, 0);
  vertex(288, 432);
  vertex(0, 432);
  endShape();
  stroke("rgba(0,0,0,0)");
  strokeCap(PROJECT);
  strokeJoin(MITER);
  fill("#ffffff");
  beginShape();
  vertex(144.4, 62.4);
 
  bezierVertex(169.3080422173688, 62.4, 189.5, 84.38281878330804, 189.5, 111.5);
  bezierVertex(
    189.5,
    138.61718121669196,
    169.3080422173688,
    160.6,
    144.4,
    160.6
  );
  bezierVertex(
    119.49195778263122,
    160.6,
    99.30000000000001,
    138.61718121669196,
    99.30000000000001,
    111.5
  );
  bezierVertex(
    99.30000000000001,
    84.38281878330804,
    119.49195778263122,
    62.4,
    144.4,
    62.4
  );
  endShape();
  fill("#ffffff");
  stroke("#000000");
  beginShape();
  vertex(109.8, 144.3);
  bezierVertex(89.5, 158.9, 75.8, 186.20000000000002, 75.8, 217.5);
  bezierVertex(75.8, 247.8, 88.6, 274.3, 107.9, 289.2);
  bezierVertex(109.80000000000001, 290.7, 111.7, 292, 113.7, 293.3);
  bezierVertex(121.4, 298, 129.9, 301, 139, 301.8);
  bezierVertex(140.6, 302, 142.3, 302, 143.9, 302);
  bezierVertex(146, 302, 148.20000000000002, 301.9, 150.3, 301.6);
  bezierVertex(
    158.8,
    300.6,
    166.8,
    297.70000000000005,
    174.10000000000002,
    293.20000000000005
  );
  bezierVertex(
    176.50000000000003,
    291.70000000000005,
    178.8,
    290.1,
    181.00000000000003,
    288.30000000000007
  );
  bezierVertex(
    199.70000000000002,
    273.20000000000005,
    212.10000000000002,
    247.10000000000008,
    212.10000000000002,
    217.40000000000006
  );
  bezierVertex(
    212.10000000000002,
    186.20000000000007,
    198.40000000000003,
    158.90000000000006,
    178.10000000000002,
    144.20000000000005
  );
  endShape();
  stroke("#000000");
  fill("#000000");
  beginShape();
  vertex(189.5, 232.8);
  bezierVertex(189.5, 257.90000000000003, 169.1, 278.3, 144, 278.3);
  bezierVertex(118.9, 278.3, 98.5, 257.90000000000003, 98.5, 232.8);
  bezierVertex(98.5, 207.7, 118.9, 162.4, 144, 162.4);
  bezierVertex(169.1, 162.4, 189.5, 207.7, 189.5, 232.8);
  endShape();
  fill("#ffffff");
  stroke("#000000");
  beginShape();
  vertex(158.3, 124.3);
  bezierVertex(158.3, 132.6, 151.60000000000002, 139.3, 143.3, 139.3);
  bezierVertex(
    135,
    139.3,
    128.3,
    132.60000000000002,
    128.3,
    124.30000000000001
  );
  bezierVertex(128.3, 116, 135, 101.10000000000001, 143.3, 101.10000000000001);
  bezierVertex(
    151.60000000000002,
    101.10000000000001,
    158.3,
    116,
    158.3,
    124.3
  );
  endShape();
  fill("#ffffff");
  stroke("#000000");
  beginShape();
  vertex(138.3, 56.7);
  bezierVertex(
    114.60000000000001,
    59.7,
    96.20000000000002,
    81.5,
    96.20000000000002,
    107.80000000000001
  );
  bezierVertex(
    96.20000000000002,
    122.00000000000001,
    101.60000000000002,
    134.9,
    110.20000000000002,
    144.20000000000002
  );
  vertex(118.90000000000002, 122.30000000000001);
  bezierVertex(
    112.50000000000001,
    117.00000000000001,
    108.50000000000001,
    109.60000000000001,
    108.50000000000001,
    101.4
  );
  bezierVertex(
    108.50000000000001,
    86.30000000000001,
    122.10000000000001,
    73.9,
    139.70000000000002,
    72.10000000000001
  );
  endShape();
  fill("#ffffff");
  stroke("#000000");
  beginShape();
  vertex(149.3, 56.7);
  bezierVertex(173.20000000000002, 59.5, 191.8, 81.4, 191.8, 107.9);
  bezierVertex(191.8, 122.10000000000001, 186.4, 135, 177.8, 144.3);
  vertex(169.10000000000002, 122.4);
  bezierVertex(
    175.50000000000003,
    117.10000000000001,
    179.50000000000003,
    109.7,
    179.50000000000003,
    101.5
  );
  bezierVertex(
    179.50000000000003,
    86.3,
    165.70000000000002,
    73.8,
    148.00000000000003,
    72.2
  );
  endShape();
  fill("#000000");
  stroke("#000000");
  beginShape();
  vertex(135.3, 96.1);
  vertex(114.80000000000001, 96.1);
  bezierVertex(
    113.9,
    96.1,
    113.10000000000001,
    95.3,
    113.10000000000001,
    94.39999999999999
  );
  vertex(113.10000000000001, 91.49999999999999);
  bezierVertex(
    113.10000000000001,
    90.59999999999998,
    113.9,
    89.79999999999998,
    114.80000000000001,
    89.79999999999998
  );
  vertex(135.3, 89.79999999999998);
  bezierVertex(
    136.20000000000002,
    89.79999999999998,
    137,
    90.59999999999998,
    137,
    91.49999999999999
  );
  vertex(137, 94.39999999999999);
  bezierVertex(137, 95.3, 136.2, 96.1, 135.3, 96.1);
  endShape();
  fill("#000000");
  stroke("#000000");
  beginShape();
  vertex(152.7, 96.1);
  vertex(173.2, 96.1);
  bezierVertex(
    174.1,
    96.1,
    174.89999999999998,
    95.3,
    174.89999999999998,
    94.39999999999999
  );
  vertex(174.89999999999998, 91.49999999999999);
  bezierVertex(
    174.89999999999998,
    90.59999999999998,
    174.09999999999997,
    89.79999999999998,
    173.2,
    89.79999999999998
  );
  vertex(152.7, 89.79999999999998);
  bezierVertex(
    151.79999999999998,
    89.79999999999998,
    151,
    90.59999999999998,
    151,
    91.49999999999999
  );
  vertex(151, 94.39999999999999);
  bezierVertex(151, 95.3, 151.8, 96.1, 152.7, 96.1);
  endShape();
  fill("#ffffff");
  stroke("#000000");
  beginShape();
  vertex(158.6, 99.2);
  vertex(167.4, 99.2);
  bezierVertex(168.3, 99.2, 169, 98.5, 169, 97.60000000000001);
  vertex(169, 97.60000000000001);
  bezierVertex(169, 96.7, 168.3, 96.00000000000001, 167.4, 96.00000000000001);
  vertex(158.6, 96.00000000000001);
  bezierVertex(
    157.7,
    96.00000000000001,
    157,
    96.70000000000002,
    157,
    97.60000000000001
  );
  vertex(157, 97.60000000000001);
  bezierVertex(157, 98.5, 157.7, 99.2, 158.6, 99.2);
  endShape();
  fill("#ffffff");
  stroke("#000000");
  beginShape();
  vertex(119.6, 99.2);
  vertex(128.4, 99.2);
  bezierVertex(129.3, 99.2, 130, 98.5, 130, 97.60000000000001);
  vertex(130, 97.60000000000001);
  bezierVertex(130, 96.7, 129.3, 96.00000000000001, 128.4, 96.00000000000001);
  vertex(119.60000000000001, 96.00000000000001);
  bezierVertex(
    118.7,
    96.00000000000001,
    118.00000000000001,
    96.70000000000002,
    118.00000000000001,
    97.60000000000001
  );
  vertex(118.00000000000001, 97.60000000000001);
  bezierVertex(118, 98.5, 118.8, 99.2, 119.6, 99.2);
  endShape();
  fill("#000000");
  stroke("#000000");
  beginShape();
  vertex(144, 134.5);
  vertex(133.6, 130.8);
  vertex(154.4, 130.8);
  vertex(144, 134.5);
  endShape();
  fill("#ef3837");
  stroke("#000000");
  beginShape();
  vertex(166.9, 309.7);
  vertex(167, 310.09999999999997);
  bezierVertex(
    169,
    309.49999999999994,
    170.9,
    308.7,
    172.7,
    307.59999999999997
  );
  vertex(172.1, 307.4);
  bezierVertex(172.1, 307.4, 172.1, 307.4, 172.1, 307.4);
  endShape();
  fill("#ef3837");
  stroke("#000000");
  beginShape();
  vertex(174.8, 312.5);
  bezierVertex(
    175.8,
    311.6,
    176.60000000000002,
    310.5,
    177.10000000000002,
    309.5
  );
  vertex(221.90000000000003, 328.2);
  vertex(220.80000000000004, 329);
  vertex(193.50000000000003, 327.3);
  vertex(201.60000000000002, 343.6);
  vertex(213.50000000000003, 367.5);
  vertex(193.60000000000002, 349.7);
  vertex(180.10000000000002, 337.59999999999997);
  vertex(174.60000000000002, 364.2);
  vertex(167.70000000000002, 315.59999999999997);
  bezierVertex(
    168.60000000000002,
    315.59999999999997,
    169.60000000000002,
    315.4,
    170.60000000000002,
    314.99999999999994
  );
  endShape();
  fill("#f2ce37");
  stroke("#000000");
  beginShape();
  vertex(174.8, 312.5);
  vertex(197.8, 322.1);
  vertex(197.3, 322.5);
  vertex(183.6, 321.7);
  vertex(187.7, 329.8);
  vertex(193.6, 341.8);
  vertex(183.7, 332.9);
  vertex(176.9, 326.9);
  vertex(174.1, 340.2);
  vertex(173.8, 340.4);
  vertex(170.6, 315.1);
  endShape();
  fill("rgba(0, 0, 0, 0)");
  stroke("#000000");
  beginShape();
  vertex(171, 308);
  bezierVertex(162.6, 312.3, 153.7, 310.8, 151.1, 304.7);
  bezierVertex(
    150.7,
    303.7,
    150.4,
    302.59999999999997,
    150.4,
    301.59999999999997
  );
  bezierVertex(
    158.9,
    300.59999999999997,
    166.9,
    297.7,
    174.20000000000002,
    293.2
  );
  bezierVertex(
    176.60000000000002,
    291.7,
    178.9,
    290.09999999999997,
    181.10000000000002,
    288.3
  );
  bezierVertex(
    181.20000000000002,
    288.6,
    181.40000000000003,
    288.8,
    181.50000000000003,
    289.1
  );
  bezierVertex(184.1, 295.2, 179.4, 303.7, 171, 308);
  endShape();
  fill("rgba(0, 0, 0, 0)");
  stroke("#000000");
  beginShape();
  vertex(167.7, 315.6);
  bezierVertex(
    165.2,
    315.70000000000005,
    163.1,
    314.70000000000005,
    162.2,
    312.70000000000005
  );
  bezierVertex(
    162,
    312.20000000000005,
    161.89999999999998,
    311.70000000000005,
    161.79999999999998,
    311.1
  );
  bezierVertex(
    163.6,
    310.90000000000003,
    165.29999999999998,
    310.5,
    166.89999999999998,
    310
  );
  endShape();
  fill("rgba(0, 0, 0, 0)");
  stroke("#000000");
  beginShape();
  vertex(174.8, 312.5);
  bezierVertex(
    174,
    313.2,
    173.10000000000002,
    313.9,
    172.10000000000002,
    314.4
  );
  bezierVertex(
    171.60000000000002,
    314.7,
    171.10000000000002,
    314.9,
    170.50000000000003,
    315
  );
  endShape();
  fill("rgba(0, 0, 0, 0)");
  stroke("#000000");
  beginShape();
  vertex(177.1, 309.5);
  bezierVertex(177.79999999999998, 308, 178, 306.4, 177.4, 305);
  bezierVertex(177.3, 304.9, 177.3, 304.7, 177.20000000000002, 304.6);
  bezierVertex(
    176.10000000000002,
    305.5,
    175.00000000000003,
    306.3,
    173.8,
    307
  );
  bezierVertex(
    173.5,
    307.2,
    173.10000000000002,
    307.4,
    172.70000000000002,
    307.6
  );
  endShape();
  fill("#ef3d2d");
  stroke("#000000");
  beginShape();
  vertex(115.5, 307.4);
  bezierVertex(115.5, 307.4, 115.5, 307.4, 115.5, 307.4);
  vertex(114.9, 307.59999999999997);
  bezierVertex(
    116.7,
    308.59999999999997,
    118.7,
    309.49999999999994,
    120.60000000000001,
    310.09999999999997
  );
  vertex(120.7, 309.7);
  endShape();
  fill("#ef3d2d");
  stroke("#000000");
  beginShape();
  vertex(117.1, 315.1);
  bezierVertex(118.1, 315.5, 119.1, 315.6, 120, 315.70000000000005);
  vertex(113.7, 364.80000000000007);
  vertex(113.10000000000001, 364.30000000000007);
  vertex(107.50000000000001, 337.70000000000005);
  vertex(94, 349.7);
  vertex(74.1, 367.5);
  vertex(86, 343.6);
  vertex(94.1, 327.3);
  vertex(66.8, 329);
  vertex(65.7, 328.2);
  vertex(110.5, 309.5);
  bezierVertex(111, 310.6, 111.8, 311.6, 112.8, 312.5);
  endShape();
  fill("#f2ce37");
  stroke("#000000");
  beginShape();
  vertex(117.1, 315.1);
  vertex(113.8, 340.4);
  vertex(113.5, 340.2);
  vertex(110.7, 326.9);
  vertex(104, 332.9);
  vertex(94, 341.8);
  vertex(100, 329.8);
  vertex(104, 321.7);
  vertex(90.4, 322.5);
  vertex(89.9, 322.1);
  vertex(112.8, 312.5);
  endShape();
  fill("rgba(0, 0, 0, 0)");
  stroke("#000000");
  beginShape();
  vertex(116.7, 308);
  bezierVertex(125.10000000000001, 312.3, 134, 310.8, 136.6, 304.7);
  bezierVertex(
    137,
    303.7,
    137.29999999999998,
    302.59999999999997,
    137.29999999999998,
    301.59999999999997
  );
  bezierVertex(
    128.79999999999998,
    300.59999999999997,
    120.79999999999998,
    297.7,
    113.49999999999999,
    293.2
  );
  bezierVertex(
    111.09999999999998,
    291.7,
    108.79999999999998,
    290.09999999999997,
    106.59999999999998,
    288.3
  );
  bezierVertex(
    106.49999999999999,
    288.6,
    106.29999999999998,
    288.8,
    106.19999999999997,
    289.1
  );
  bezierVertex(103.6, 295.2, 108.3, 303.7, 116.7, 308);
  endShape();
  fill("rgba(0, 0, 0, 0)");
  stroke("#000000");
  beginShape();
  vertex(120.7, 310.1);
  bezierVertex(
    122.4,
    310.6,
    124.10000000000001,
    311,
    125.8,
    311.20000000000005
  );
  bezierVertex(
    125.8,
    311.70000000000005,
    125.7,
    312.30000000000007,
    125.5,
    312.80000000000007
  );
  bezierVertex(
    124.7,
    314.80000000000007,
    122.6,
    315.80000000000007,
    120,
    315.70000000000005
  );
  endShape();
  fill("rgba(0, 0, 0, 0)");
  stroke("#000000");
  beginShape();
  vertex(117.1, 315.1);
  bezierVertex(
    116.6,
    314.90000000000003,
    116.1,
    314.70000000000005,
    115.5,
    314.5
  );
  bezierVertex(114.5, 314, 113.6, 313.3, 112.8, 312.6);
  endShape();
  fill("rgba(0, 0, 0, 0)");
  stroke("#000000");
  beginShape();
  vertex(115, 307.6);
  bezierVertex(
    114.6,
    307.40000000000003,
    114.3,
    307.20000000000005,
    113.9,
    307
  );
  bezierVertex(112.7, 306.3, 111.60000000000001, 305.5, 110.5, 304.6);
  bezierVertex(
    110.4,
    304.70000000000005,
    110.4,
    304.90000000000003,
    110.3,
    305
  );
  bezierVertex(109.7, 306.4, 109.89999999999999, 308, 110.6, 309.5);
  endShape();
  fill("#000000");
  stroke("#000000");
  beginShape();
  vertex(143.8, 123.9);
  vertex(155.1, 129.8);
  vertex(132.5, 129.8);
  vertex(143.8, 123.9);
  endShape();
  fill("rgba(0, 0, 0, 0)");
  stroke("#000000");
  beginShape();
  vertex(143.8, 37.4);
  bezierVertex(144.20000000000002, 36.6, 144, 45.8, 149.10000000000002, 56.4);
  bezierVertex(153.70000000000002, 65.8, 146.70000000000002, 75.4, 143.8, 75.4);
  bezierVertex(
    140.9,
    75.4,
    133.8,
    65.80000000000001,
    138.5,
    56.400000000000006
  );
  bezierVertex(143.8, 45.8, 143.4, 38.2, 143.8, 37.4);
  endShape();
  fill("#ef3837");
  stroke("#000000");
  beginShape();
  vertex(174.6, 364.3);
  endShape();
  fill("#ffffff");
  stroke("#000000");
  beginShape();
  vertex(65.1, 201.4);
  bezierVertex(
    55.99999999999999,
    228.4,
    54.89999999999999,
    252.7,
    62.599999999999994,
    255.7
  );
  bezierVertex(70.3, 258.7, 84, 239.2, 93.1, 212.2);
  bezierVertex(
    102.19999999999999,
    185.2,
    103.3,
    160.89999999999998,
    95.6,
    157.89999999999998
  );
  bezierVertex(87.89999999999999, 154.89999999999998, 74.3, 174.4, 65.1, 201.4);
  endShape();
  fill("#ffffff");
  stroke("#000000");
  beginShape();
  vertex(222.2, 201.4);
  bezierVertex(
    231.29999999999998,
    228.4,
    232.39999999999998,
    252.7,
    224.7,
    255.7
  );
  bezierVertex(217, 258.7, 203.29999999999998, 239.2, 194.2, 212.2);
  bezierVertex(
    185.1,
    185.2,
    184,
    160.89999999999998,
    191.7,
    157.89999999999998
  );
  bezierVertex(
    199.39999999999998,
    154.89999999999998,
    213.1,
    174.4,
    222.2,
    201.4
  );
  endShape();

  //END OF SVG CODE
  //DIVISION LINES

  // rect to mask my bottom part
  rect(0, 288, 288, 400);
  // rect to mask my head part
  rect(0, 0, 288, 144);

  //LEG1
  push();
  translate(122, 325);
  fill(0, 0, 0);
  rectMode(CENTER);
  rect(0, 0, 35, 75);
  pop();
  //LEG2
  push();
  translate(164, 325);
  fill(0, 0, 0);
  rectMode(CENTER);
  rect(0, 0, 35, 75);
  pop();
  //BEZIER LINES FOR LEG
  push();
  noFill();
  translate(80, 275);
  strokeCap(ROUND);
  stroke(255, 0, 0);
  strokeWeight(10);
  bezier(65, 20, 10, 10, 90, 90, 15, 80);
  pop();
  //BEZIER LINES FOR LEG
  push();
  noFill();
  translate(80, 275);
  strokeCap(ROUND);
  stroke(255, 0, 0);
  strokeWeight(10);
  bezier(100, 20, 10, 80, 150, 50, 80, 80);
  pop();
  //FUNC FOR CABEZA(i added this late)
  function drawCircle(x, y, diameter, g) {
    fill(g, 0, 0);
    stroke(0);
    ellipse(x, y, diameter, diameter);
  }
  translate(0,+10)
  //CABEZA NUEVO
  push();
  fill(0, 0, 0);
  ellipse(width / 2, 95, 130, 100);
  pop();
  // LEFT EAR
  push();
  translate(width / 3.5, height / 6);
  rotate(0);
  scale(1);
  fill(0, 0, 0);
  ellipse(0, 0, 54, 54);
  pop();
  //RIGHT EAR (when i realized i should just use func)
  push();
  drawCircle(width / 1.4, height / 6, 54, 0);
  pop();
  //LEFT WHITE EYE
  push();
  drawCircle(width / 2.5, height / 4.8, 30);
  pop();
  //RIGHT WHITE EYE
  push();
  drawCircle(width / 1.66, height / 4.8, 30);
  pop();
  //RIGHT PUPIL
  push();
  drawCircle(width / 1.66, height / 5, 8, 0);
  pop();
  //LEFT PUPIL
  push();
  drawCircle(width / 2.5, height / 5, 8, 0);
  pop();
  //MOUF
  push();
  translate(width / 2, height / 4.2);
  fill(255, 255, 255);
  rectMode(CENTER);
  rect(0, 0, 20, 6);
  pop();
}
function Split (){  line(0, width / 2, width, width / 2);
  line(0, 288, width, 288);

  print(mouseX, mouseY);
                 }